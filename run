#!/usr/bin/env shelduck_run
set -eu

shelduck import https://raw.githubusercontent.com/legeyda/bobshell/refs/heads/unstable/run.sh
shelduck import https://raw.githubusercontent.com/legeyda/bobshell/refs/heads/unstable/scope.sh
shelduck import https://raw.githubusercontent.com/legeyda/bobshell/refs/heads/unstable/string.sh
shelduck import https://raw.githubusercontent.com/legeyda/bobshell/refs/heads/unstable/install.sh
shelduck import https://raw.githubusercontent.com/legeyda/bobshell/refs/heads/unstable/template.sh
shelduck import https://raw.githubusercontent.com/legeyda/bobshell/refs/heads/unstable/require.sh
shelduck import https://raw.githubusercontent.com/legeyda/bobshell/refs/heads/unstable/git.sh

shelduck import https://raw.githubusercontent.com/legeyda/bobshell/refs/heads/unstable/git/version.sh

on_start() {
	set -x
	: "${RUNWAY_BUILD_TARGET:=./target}"
	: "${RUNWAY_INSTALL_NAME:=runway}"
}

run_clean() {
	rm -rf "$RUNWAY_BUILD_TARGET"
	bobshell_handle_subcommand "$@"
}






run_docker_build() {
	: "${RUNWAY_DOCKER_IMAGE_NAME:=$RUNWAY_INSTALL_NAME}"
	if [ -z "${RUNWAY_DOCKER_IMAGE_TAG:-}" ]; then
		bobshell_git_version
		bobshell_result_check RUNWAY_DOCKER_IMAGE_TAG || RUNWAY_DOCKER_IMAGE_TAG=noversion
	fi
	docker build . --progress=plain --tag "$RUNWAY_DOCKER_IMAGE_NAME:$RUNWAY_DOCKER_IMAGE_TAG"
}

run_docker_debug() {
	run_docker_build

	run_docker_debug_mount_logs="$RUNWAY_BUILD_TARGET/logs"
	if [ ! -e "$run_docker_debug_mount_logs" ]; then
		#install --directory --owner 200000 --group 200000 "$run_docker_debug_mount_logs"
		mkdir -p "$run_docker_debug_mount_logs"
		sudo chown 200000:200000 "$run_docker_debug_mount_logs"
	fi
	

	docker run --name debug-runway --rm \
		--env "RUNWAY_REPO_URL=git@github.com:legeyda/tailsitter.git" \
		--env "RUNWAY_SSH_IDENTITY=$RUNWAY_SSH_IDENTITY" \
		--mount "type=bind,source=$run_docker_debug_mount_logs,target=/var/log/supervisor" \
		"$RUNWAY_DOCKER_IMAGE_NAME:$RUNWAY_DOCKER_IMAGE_TAG"
}



run_test_install() {
	export RUNWAY_INSTALL_DESTDIR=$RUNWAY_BUILD_TARGET/test_install
	RUNWAY_INSTALL_SYSTEMCTL=fake_systemctl


	RUNWAY_REPO_URL="git@github.com:legeyda/tailsitter.git"
	RUNWAY_RUN_ENV='x=1; y=2'
	RUNWAY_RUN_COMMAND='./run args from installer'
	BOBSHELL_INSTALL_SYSTEMCTL=fake-systectl

	run_install
	run_install_systemd_service

	
	"$RUNWAY_INSTALL_DESTDIR$RUNWAY_INSTALL_BINDIR/$RUNWAY_INSTALL_NAME"
}

fake_systemctl() {
	printf 'FAKE SYSTEMCTL CALL: systemctl %s\n' "$*"
}



run_install() {
	mkdir -p "$RUNWAY_BUILD_TARGET"

	#
	runway_install_init


	#
	runway_src=$(cat runway)
	runway_src=$(bobshell_replace "$runway_src" "RUNWAY_DEFAULT_INSTALL_NAME=runway${bobshell_newline}" "RUNWAY_DEFAULT_INSTALL_NAME=$RUNWAY_INSTALL_NAME${bobshell_newline}")
	runway_src=$(bobshell_replace "$runway_src" "RUNWAY_DEFAULT_INSTALL_ROOT=${bobshell_newline}" "RUNWAY_DEFAULT_INSTALL_ROOT=$RUNWAY_INSTALL_ROOT${bobshell_newline}")
	printf %s "$runway_src" > "$RUNWAY_BUILD_TARGET/$RUNWAY_INSTALL_NAME"
	bobshell_replace "$runway_src" RUNWAY_INSTALL_NAME=runway "RUNWAY_INSTALL_NAME=$RUNWAY_INSTALL_NAME" > "$RUNWAY_BUILD_TARGET/$RUNWAY_INSTALL_NAME"

	bobshell_install_put_executable "file:$RUNWAY_BUILD_TARGET/$RUNWAY_INSTALL_NAME" "$RUNWAY_INSTALL_NAME"



	(
		target="file:$RUNWAY_BUILD_TARGET/$RUNWAY_INSTALL_NAME-env.sh"
		bobshell_scope_unset RUNWAY_INSTALL_ RUNWAY_BUILD_
		bobshell_scope_env RUNWAY_ "$target"
	)
	bobshell_install_put_config "file:$RUNWAY_BUILD_TARGET/$RUNWAY_INSTALL_NAME-env.sh" env.sh
	

}

runway_install_init() {
	if [ -z "${RUNWAY_SSH_KNOWN_HOSTS:-}" ]; then
		RUNWAY_SSH_KNOWN_HOSTS=$(bobshell_ssh_keyscan github.com)
	fi

	bobshell_scope_mirror RUNWAY_INSTALL_ BOBSHELL_INSTALL_
	bobshell_install_init
	bobshell_scope_mirror BOBSHELL_INSTALL_ RUNWAY_INSTALL_
}



run_install_systemd_service() {
	runway_install_init
	bobshell_mustache file:runway.service "file:$RUNWAY_BUILD_TARGET/$RUNWAY_INSTALL_NAME.service"
	bobshell_install_service "file:$RUNWAY_BUILD_TARGET/$RUNWAY_INSTALL_NAME.service" "$RUNWAY_INSTALL_NAME.service"
}


run_install_supervisord_program() {
	runway_install_init
	mkdir -p "$RUNWAY_INSTALL_DESTDIR/etc/supervisor/conf.d"
	bobshell_interpolate file:runway.conf "file:$RUNWAY_INSTALL_DESTDIR/etc/supervisor/conf.d/runway.conf"
	run_install_supervisord_program_supervisorctl="${RUNWAY_INSTALL_DESTDIR:-}${RUNWAY_INSTALL_ROOT:-}/usr/bin/supervisorctl"
	if bobshell_command_available "$run_install_supervisord_program_supervisorctl"; then
		"$run_install_supervisord_program_supervisorctl" reread
		"$run_install_supervisord_program_supervisorctl" update
	fi
}

shelduck import https://raw.githubusercontent.com/legeyda/bobshell/refs/heads/unstable/entry_point.sh